{
  "openapi": "3.0.1",
  "info": {
    "title": "Degreed.Api.Web",
    "version": "2.0"
  },
  "servers": [
    {
      "url": "https://api.staging.degreed.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/v2/accomplishments": {
      "get": {
        "tags": [
          "Accomplishment"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedAccomplishment"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Accomplishment"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostedAccomplishment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/accomplishments/{id}": {
      "get": {
        "tags": [
          "Accomplishment"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedAccomplishment"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Accomplishment"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostedAccomplishment"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Accomplishment"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostedAccomplishment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/bundles": {
      "get": {
        "tags": [
          "Bundle"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bundle"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/bundles/{id}": {
      "get": {
        "tags": [
          "Bundle"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Bundle"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Bundle"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/bundles/{id}/relationships/resources": {
      "get": {
        "tags": [
          "Bundle"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleResource"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/bundles/{bundleId}/relationships/resources": {
      "post": {
        "tags": [
          "Bundle"
        ],
        "parameters": [
          {
            "name": "bundleId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Bundle"
        ],
        "parameters": [
          {
            "name": "bundleId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Bundle"
        ],
        "parameters": [
          {
            "name": "bundleId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bundle"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/certifiable-skills": {
      "get": {
        "tags": [
          "CertifiableSkills"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedCertifiableSkill"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/certifiable-skills/{id}": {
      "get": {
        "tags": [
          "CertifiableSkills"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedCertifiableSkill"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/certificates": {
      "get": {
        "tags": [
          "Certificate"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedCertificate"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Certificate"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostedCertificate"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/certificates/{id}": {
      "get": {
        "tags": [
          "Certificate"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedCertificate"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Certificate"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostedCertificate"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Certificate"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedCertificate"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/completions": {
      "get": {
        "tags": [
          "Completion"
        ],
        "description": "This endpoint retrieves all completions for the organization. Completions require a start and end date, with a maximum range of 7 days.<br><br>For Global Admin Tool Organizations, if the `X-Degreed-Organization-Code` header is included, then the endpoint will return completions for the Tenant Organization related to the header value as long as the organization is a member of the Global Admin Tool Organization. <h2>Required Scope</h2>`completions:read`",
        "parameters": [
          {
            "name": "filter[start_date]",
            "in": "query",
            "description": "Filter criteria that returns completions added from this date on. Format `yyyy-mm-dd`.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filter[end_date]",
            "in": "query",
            "description": "Filter criteria that returns completions added until this date. Format `yyyy-mm-dd`.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "next",
            "in": "query",
            "description": "Retrieves the next batch of completions.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of completions to display per page. A maximum of 1000 is allowed.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedCompletion"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Completion"
        ],
        "description": "This endpoint creates a new completion for the user in the organization and content available to the organization. If the organization is a Global Admin Tool Organization or a provider requesting on behalf of the organization, completions can be created for Tenant Organization users and content available within the organization structure. Global Admin Tool Organization should exercise caution when indicating which content the user has completed. <br><br>For Global Admin Tool Organizations, if the user of the completion belongs to a Tenant Organization, then the `X-Degreed-Organization-Code` header can be provided, but is no longer necessary and may limit the content for which the completion can be created.<h2>Required Scope</h2>`completions:write`",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v2_completions_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostedCompletion"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/completions/{id}": {
      "get": {
        "tags": [
          "Completion"
        ],
        "description": "This endpoint retrieves a specific completion for the organization. If the organization is a Global Admin Tool Organization or a provider requesting on behalf of the organization, completions will be returned for Tenant Organizations.<br><br>For Global Admin Tool Organizations, if the user of the completion belongs to a Tenant Organization, then the `X-Degreed-Organization-Code` header can be provided, but is no longer necessary.<h2>Required Scope</h2>`completions:read` or `completions:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the completion to retrieve.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedCompletion"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Completion"
        ],
        "description": "This endpoint deletes a completion from the system. On a successful delete, it returns a `204 No Content` response. <br><br>For Global Admin Tool Organizations, if the content belongs to a Tenant Organization, then the `X-Degreed-Organization-Code` header must be provided. <h2>Required Scope</h2>`completions:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the completion to delete.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostedCompletion"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Completion"
        ],
        "description": "This endpoint updates supplied fields for a specific completion. The `PATCH` endpoint does not support the `X-Degreed-Organization-Code` header.<h2>Required Scope</h2>`completions:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the completion to update.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/completions_id_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostedCompletion"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/content": {
      "get": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint retrieves all content (excluding obsolete content) for the current organization. <br><br>For Global Admin Tool Organizations, if the `X-Degreed-Organization-Code` header is included, then the endpoint will return content for the Tenant Organization related to the header value as long as the organization is a member of the Global Admin Tool Organization. <h2>Required Scope</h2>`content:read`",
        "parameters": [
          {
            "name": "next",
            "in": "query",
            "description": "Retrieves the next batch of content.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of content items to display per page. A maximum of 1000 is allowed.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "filter[start_date]",
            "in": "query",
            "description": "Filter criteria that returns content created from this date on. Format `yyyy-mm-dd`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filter[end_date]",
            "in": "query",
            "description": "Filter criteria that returns content created before this date. Format `yyyy-mm-dd`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filter[url]",
            "in": "query",
            "description": "Filter criteria that only returns content with this URL.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "string"
            }
          },
          {
            "name": "filter[internal_only]",
            "in": "query",
            "description": "Filter criteria that only returns content internal to the organization.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "filter[include_restricted]",
            "in": "query",
            "description": "Filter criteria that only returns content restricted to administrative groups.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedContent"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/content/{id}": {
      "get": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint retrieves a specific content item for the current organization.<br><br>For Global Admin Tool Organizations, if the `X-Degreed-Organization-Code` header is included, then the endpoint will return content for the Tenant Organization related to the header value as long as the organization is a member of the Global Admin Tool Organization. <h2>Required Scope</h2>`content:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the content to retrieve.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedContent"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/content/books": {
      "get": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint retrieves all books for the current organization. <br><br>For Global Admin Tool Organizations, if the `X-Degreed-Organization-Code` header is included, then the endpoint will return content for the Tenant Organization related to the header value as long as the organization is a member of the Global Admin Tool Organization. <h2>Required Scope</h2>`content:read`",
        "parameters": [
          {
            "name": "next",
            "in": "query",
            "description": "Retrieves the next batch of books.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of books to display per page. A maximum of 1000 is allowed.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "filter[start_date]",
            "in": "query",
            "description": "Filter criteria that returns content created from this date on. Format `yyyy-mm-dd`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filter[end_date]",
            "in": "query",
            "description": "Filter criteria that returns content created before this date. Format `yyyy-mm-dd`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filter[external_id]",
            "in": "query",
            "description": "Filter criteria that only returns books with this external ID.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "string"
            }
          },
          {
            "name": "filter[internal_only]",
            "in": "query",
            "description": "Filter criteria that only returns books internal to the organization.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint creates a new book in the system. <br><br>For Global Admin Tool Organizations, if the `X-Degreed-Organization-Code` header is included, then the endpoint will create content for the Tenant Organization related to the header value as long as the organization is a member of the Global Admin Tool Organization. <h2>Required Scope</h2>`content:write`",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/content_books_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/content/books/{id}": {
      "get": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint retrieves a specific book for the current organization.<br><br>For Global Admin Tool Organizations, if the content belongs to a Tenant Organization, then the `X-Degreed-Organization-Code` header must be provided. <h2>Required Scope</h2>`content:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the book to retrieve.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint marks a book as obsolete from the Degreed catalog. On a successful delete, it returns a `204 No Content` response. <br><br>For Global Admin Tool Organizations, if the content belongs to a Tenant Organization, then the `X-Degreed-Organization-Code` header must be provided. <h2>Required Scope</h2>`content:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the book to delete.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint updates the supplied fields for a specific book.<br><br>The `PATCH` request does not support the `X-Degreed-Organization-Code` header. <h2>Required Scope</h2>`content:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the book to update.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/books_id_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/content/articles": {
      "get": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint retrieves all articles for the current organization.<br><br>For Global Admin Tool Organizations, if the `X-Degreed-Organization-Code` header is included, then the endpoint will return content for the Tenant Organization related to the header value as long as the organization is a member of the Global Admin Tool Organization. <h2>Required Scope</h2>`content:read`",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Content"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/content/articles/{id}": {
      "get": {
        "tags": [
          "Content"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Content"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Content"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/content/videos": {
      "get": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint retrieves all videos for the current organization.<br><br>For Global Admin Tool Organizations, if the `X-Degreed-Organization-Code` header is included, then the endpoint will return content for the Tenant Organization related to the header value as long as the organization is a member of the Global Admin Tool Organization. <h2>Required Scope</h2>`content:read`",
        "parameters": [
          {
            "name": "next",
            "in": "query",
            "description": "Retrieves the next batch of videos.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of videos to display per page. A maximum of 1000 is allowed.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "filter[start_date]",
            "in": "query",
            "description": "Filter criteria that returns videos created from this date on. Format `yyyy-mm-dd`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filter[end_date]",
            "in": "query",
            "description": "Filter criteria that returns videos created before this date. Format `yyyy-mm-dd`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filter[external-id]",
            "in": "query",
            "description": "Filter criteria that only returns videos with this external ID.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "string"
            }
          },
          {
            "name": "filter[internal_only]",
            "in": "query",
            "description": "Filter criteria that only returns videos internal to the organization.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "filter[include_restricted]",
            "in": "query",
            "description": "Filter criteria that only returns content restricted to administrative groups.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Video"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint creates a new video in the system and optionally creates visibilty group relationships. <br><br>For Global Admin Tool Organizations, if the `X-Degreed-Organization-Code` header is included, then the endpoint will create content for the Tenant Organization related to the header value as long as the organization is a member of the Global Admin Tool Organization.<br><br>**Note:** When visibility groups are set for content, the groups must either be (a) all of privacy level `Administrative` or (b) all of a non- `Administrative` privacy level. Non- `Administrative` privacy levels include `Open`, `Closed` and `Private`. Content in `Administrative` groups is only visible to users in the `Administrative` groups. If the content is not associated with any Administrative groups, the content is visible to all users in the organization. A group's privacy level can be retrived from the [Get a Specific Group]() endpoint.<h2>Required Scope</h2>`content:write`",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/content_videos_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Video"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/content/videos/{id}": {
      "get": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint retrieves a specific video for the current organization.<br><br>For Global Admin Tool Organizations, if the content belongs to a Tenant Organization, then the `X-Degreed-Organization-Code` header must be provided. <h2>Required Scope</h2>`content:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the video to retrieve.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Video"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint marks a video as obsolete from the Degreed catalog. On a successful delete, it returns a `204 No Content` response. <br><br>For Global Admin Tool Organizations, if the content belongs to a Tenant Organization, then the `X-Degreed-Organization-Code` header must be provided. <h2>Required Scope</h2>`content:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the video to delete.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Video"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint updates supplied fields for a specific video. The `PATCH` request does not support the `X-Degreed-Organization-Code` header. <h2>Required Scope</h2>`content:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the video to update.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/videos_id_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Video"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/content/events": {
      "get": {
        "tags": [
          "Content"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Content"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/content/events/{id}": {
      "get": {
        "tags": [
          "Content"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Content"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Content"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/content/courses": {
      "get": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint retrieves all courses for the current organization.<br><br>For Global Admin Tool Organizations, if the `X-Degreed-Organization-Code` header is included, then the endpoint will return content for the Tenant Organization related to the header value as long as the organization is a member of the Global Admin Tool Organization. <h2>Required Scope</h2>`content:read`",
        "parameters": [
          {
            "name": "next",
            "in": "query",
            "description": "Retrieves the next batch of courses.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of courses to display per page. A maximum of 1000 is allowed.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "filter[start_date]",
            "in": "query",
            "description": "Filter criteria that returns content created from this date on. Format `yyyy-mm-dd`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filter[end_date]",
            "in": "query",
            "description": "Filter criteria that returns content created before this date. Format `yyyy-mm-dd`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filter[external-id]",
            "in": "query",
            "description": "Filter criteria that only returns courses with this external ID.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "string"
            }
          },
          {
            "name": "filter[internal_only]",
            "in": "query",
            "description": "Filter criteria that only returns courses internal to the organization.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "filter[include_restricted]",
            "in": "query",
            "description": "Filter criteria that only returns content restricted to administrative groups.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint creates a new course in the system and optionally creates visibilty group relationships. <br><br>For Global Admin Tool Organizations, if the `X-Degreed-Organization-Code` header is included, then the endpoint will create content for the Tenant Organization related to the header value as long as the organization is a member of the Global Admin Tool Organization. <br><br>**Note:** When visibility groups are set for content, the groups must either be (a) all of privacy level `Administrative` or (b) all of a non- `Administrative` privacy level. Non- `Administrative` privacy levels include `Open`, `Closed` and `Private`. Content in `Administrative` groups is only visible to users in the `Administrative` groups. If the content is not associated with any Administrative groups, the content is visible to all users in the organization. A group's privacy level can be retrived from the [Get a Specific Group]() endpoint.<h2>Required Scope</h2>`content:write`",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/content_courses_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/content/courses/{id}": {
      "get": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint retrieves a specific course for the current organization.<br><br>For Global Admin Tool Organizations, if the content belongs to a Tenant Organization, then the `X-Degreed-Organization-Code` header must be provided. <h2>Required Scope</h2>`content:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the course to retrieve.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint marks a course as obsolete from the Degreed catalog. On a successful delete, it returns a `204 No Content` response. <br><br>For Global Admin Tool Organizations, if the content belongs to a Tenant Organization, then the `X-Degreed-Organization-Code` header must be provided. <h2>Required Scope</h2>`content:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the course to delete.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint updates supplied fields for a specific course. The `PATCH` request does not support the `X-Degreed-Organization-Code` header. <h2>Required Scope</h2>`content:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/courses_id_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/content/podcasts": {
      "get": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint retrieves all podcasts for the current organization.<br><br>For Global Admin Tool Organizations, if the `X-Degreed-Organization-Code` header is included, then the endpoint will return content for the Tenant Organization related to the header value as long as the organization is a member of the Global Admin Tool Organization. <h2>Required Scope</h2>`content:read`",
        "parameters": [
          {
            "name": "next",
            "in": "query",
            "description": "Retrieves the next batch of podcasts.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of podcasts to display per page. A maximum of 1000 is allowed.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "filter[start_date]",
            "in": "query",
            "description": "Filter criteria that returns content created from this date on. Format `yyyy-mm-dd`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filter[end_date]",
            "in": "query",
            "description": "Filter criteria that returns content created before this date. Format `yyyy-mm-dd`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filter[external-id]",
            "in": "query",
            "description": "Filter criteria that only returns podcasts with this external ID.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "string"
            }
          },
          {
            "name": "filter[internal_only]",
            "in": "query",
            "description": "Filter criteria that only returns podcasts internal to the organization.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "filter[include_restricted]",
            "in": "query",
            "description": "Filter criteria that only returns content restricted to administrative groups.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Podcast"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint creates a new podcast in the system and optionally creates visibilty group relationships. <br><br>For Global Admin Tool Organizations, if the `X-Degreed-Organization-Code` header is included, then the endpoint will create content for the Tenant Organization related to the header value as long as the organization is a member of the Global Admin Tool Organization. <br><br>**Note:** When visibility groups are set for content, the groups must either be (a) all of privacy level `Administrative` or (b) all of a non- `Administrative` privacy level. Non- `Administrative` privacy levels include `Open`, `Closed` and `Private`. Content in `Administrative` groups is only visible to users in the `Administrative` groups. If the content is not associated with any Administrative groups, the content is visible to all users in the organization. A group's privacy level can be retrived from the [Get a Specific Group]() endpoint.<h2>Required Scope</h2>`content:write`",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/content_podcasts_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Podcast"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/content/podcasts/{id}": {
      "get": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint retrieves a specific podcast for the current organization.<br><br>For Global Admin Tool Organizations, if the content belongs to a Tenant Organization, then the `X-Degreed-Organization-Code` header must be provided. <h2>Required Scope</h2>`content:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the podcast to retrieve.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Podcast"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint marks a podcast as obsolete from the Degreed catalog. On a successful delete, it returns a `204 No Content` response. <br><br>For Global Admin Tool Organizations, if the content belongs to a Tenant Organization, then the `X-Degreed-Organization-Code` header must be provided. <h2>Required Scope</h2>`content:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the podcast to delete.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Podcast"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint updates supplied fields for a specific podcast. The `PATCH` request does not support the `X-Degreed-Organization-Code` header. <h2>Required Scope</h2>`content:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the podcast to update.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/podcasts_id_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Podcast"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/content/assessments": {
      "get": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint retrieves all assessments for the current organization.<br><br>For Global Admin Tool Organizations, if the `X-Degreed-Organization-Code` header is included, then the endpoint will return content for the Tenant Organization related to the header value as long as the organization is a member of the Global Admin Tool Organization. <h2>Required Scope</h2>`content:read`",
        "parameters": [
          {
            "name": "next",
            "in": "query",
            "description": "Retrieves the next batch of assessments.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of assessments to display per page. A maximum of 1000 is allowed.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "filter[start_date]",
            "in": "query",
            "description": "Filter criteria that returns content created from this date on. Format `yyyy-mm-dd`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filter[end_date]",
            "in": "query",
            "description": "Filter criteria that returns content created before this date. Format `yyyy-mm-dd`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filter[external-id]",
            "in": "query",
            "description": "Filter criteria that only returns assessments with this external ID.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "string"
            }
          },
          {
            "name": "filter[internal_only]",
            "in": "query",
            "description": "Filter criteria that only returns assessments internal to the organization.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "filter[include_restricted]",
            "in": "query",
            "description": "Filter criteria that only returns assessments restricted to administrative groups.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assessment"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint creates a new assessment in the system and optionally creates visibilty group relationships. <br><br>For Global Admin Tool Organizations, if the `X-Degreed-Organization-Code` header is included, then the endpoint will create content for the Tenant Organization related to the header value as long as the organization is a member of the Global Admin Tool Organization. <br><br>**Note:** When visibility groups are set for content, the groups must either be (a) all of privacy level `Administrative` or (b) all of a non- `Administrative` privacy level. Non- `Administrative` privacy levels include `Open`, `Closed` and `Private`. Content in `Administrative` groups is only visible to users in the `Administrative` groups. If the content is not associated with any Administrative groups, the content is visible to all users in the organization. A group's privacy level can be retrived from the [Get a Specific Group]() endpoint.<h2>Required Scope</h2>`content:write`",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/content_assessments_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assessment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/content/assessments/{id}": {
      "get": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint retrieves a specific assessment for the current organization.<br><br>For Global Admin Tool Organizations, if the content belongs to a Tenant Organization, then the `X-Degreed-Organization-Code` header must be provided. <h2>Required Scope</h2>`content:read`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the assessment to retrieve.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assessment"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint marks an assessment as obsolete from the Degreed catalog. On a successful delete, it returns a `204 No Content` response. <br><br>For Global Admin Tool Organizations, if the content belongs to a Tenant Organization, then the `X-Degreed-Organization-Code` header must be provided. <h2>Required Scope</h2>`content:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the assessment to delete.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assessment"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint updates supplied fields for a specific assessment. The `PATCH` request does not support the `X-Degreed-Organization-Code` header. <h2>Required Scope</h2>`content:write`",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the assessment to update.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/assessments_id_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assessment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/content/{contentId}/skills": {
      "get": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint retrieves all skills for a specific content item. <h2>Required Scope</h2>`content:read`",
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "The ID of the content to retrieve.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "next",
            "in": "query",
            "description": "Retrieves the next batch of content.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of content items to display per page. A maximum of 1000 is allowed.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Skill"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/content/{contentId}/relationships/skills": {
      "post": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint adds one or more skills to existing content. On a successful add, it returns a `201 Created` response. <h2>Required Scope</h2>`content:write`",
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "The ID of the content to add skills to.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/relationships_skills_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedContent"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint deletes the specified skills in content. On a successful delete, it returns a `204 No Content` response.<h2>Required Scope</h2>`content:write`",
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "The ID of the content to delete skills from.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedContent"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint replaces all skills in existing content with the newly supplied skills. On a successful add, it returns a `201 Created` response.<h2>Required Scope</h2>`content:write`",
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "The ID of the content to add replace skills in.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/relationships_skills_body_1"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedContent"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/content/{contentId}/visibility-groups": {
      "get": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint retrieves visibility groups for a specific content item. <h2>Required Scope</h2>`content:read`",
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "The ID of the content for which the visibility groups will be retrieved. The content type may be `Articles`, `Assessments`, `Courses`, `Events`, `Podcasts` or `Videos`.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedGroup"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/content/{contentId}/relationships/visibility-groups": {
      "patch": {
        "tags": [
          "Content"
        ],
        "description": "This endpoint replaces all content's visibility groups. On a successful replacement, it returns a `201 Created` response. If the patch is set with an empty list, the content will not be shared in any groups.<br><br>**Note:** When visibility groups are set for content, the groups must either be (a) all of privacy level `Administrative` or (b) all of a non- `Administrative` privacy level. Non- `Administrative` privacy levels include `Open`, `Closed` and `Private`. Content in `Administrative` groups is only visible to users in the `Administrative` groups. If the content has one or more `Administrative` visibility groups set, and you send the body with an empty list of groups, the content will be visible to any users in the organization. A group's privacy level can be retrived from the [Get a Specific Group]() endpoint.<h2>Required Scope</h2>`content:write`",
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "The ID of the content for which the visibility groups will be replaced. The content type can be `Articles`, `Assessments`, `Courses`, `Events`, `Podcasts` or `Videos`.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListedContent"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupRelationship"
                }
              }
            }
          }
        }
      }
    },
    "/xAPI/statements": {
      "get": {
        "tags": [
          "ExperienceApi"
        ],
        "parameters": [
          {
            "name": "statementId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "next",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "since",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "until",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ascending",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "verb",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "agent",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "ExperienceApi"
        ],
        "responses": {
          "201": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v2/groups": {
      "get": {
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedGroup"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Group"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedGroup"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/groups/{id}": {
      "get": {
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedGroup"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedGroup"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedGroup"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/groups/{id}/users": {
      "get": {
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupMember"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/groups/{id}/relationships/organizations": {
      "get": {
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupOrganization"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/groups/{groupId}/relationships/organizations": {
      "post": {
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "patch": {
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/v2/groups/{groupId}/relationships/{roleId}": {
      "post": {
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListedGroup"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedGroup"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedGroup"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListedGroup"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedGroup"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedGroup"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListedGroup"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedGroup"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedGroup"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/group-memberships": {
      "get": {
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupMembership"
                }
              }
            }
          }
        }
      }
    },
    "/auth/access-token-detail": {
      "get": {
        "tags": [
          "Home"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v2/logins": {
      "get": {
        "tags": [
          "Login"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedLogin"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/opportunities": {
      "get": {
        "tags": [
          "Opportunity"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedOpportunity"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Opportunity"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostedOpportunity"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/opportunities/{id}": {
      "get": {
        "tags": [
          "Opportunity"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedOpportunity"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Opportunity"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedOpportunity"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Opportunity"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedOpportunity"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/opportunities/{opportunityId}/relationships/suggested-plans": {
      "post": {
        "tags": [
          "Opportunity"
        ],
        "parameters": [
          {
            "name": "opportunityId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": [
          "Opportunity"
        ],
        "parameters": [
          {
            "name": "opportunityId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "patch": {
        "tags": [
          "Opportunity"
        ],
        "parameters": [
          {
            "name": "opportunityId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/v2/opportunities/{opportunityId}/relationships/suggested-pathways": {
      "post": {
        "tags": [
          "Opportunity"
        ],
        "parameters": [
          {
            "name": "opportunityId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": [
          "Opportunity"
        ],
        "parameters": [
          {
            "name": "opportunityId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "patch": {
        "tags": [
          "Opportunity"
        ],
        "parameters": [
          {
            "name": "opportunityId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/v2/pathways": {
      "get": {
        "tags": [
          "Pathway"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedPathway"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pathways/{id}": {
      "get": {
        "tags": [
          "Pathway"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedPathway"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pathways/{id}/tags": {
      "get": {
        "tags": [
          "Pathway"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedPathwayTag"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pathways/{id}/collaborators": {
      "get": {
        "tags": [
          "Pathway"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedPathwayCollaborator"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pathways/{id}/groups": {
      "get": {
        "tags": [
          "Pathway"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedPathwayGroup"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pathways/{id}/followers": {
      "get": {
        "tags": [
          "Pathway"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedPathwayFollower"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/pex-users": {
      "get": {
        "tags": [
          "PexUser"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedPexUser"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/providers": {
      "get": {
        "tags": [
          "Provider"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedProvider"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/providers/{id}": {
      "get": {
        "tags": [
          "Provider"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedProvider"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/providers/{id}/licenses": {
      "get": {
        "tags": [
          "Provider"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedProvider"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/required-learning": {
      "get": {
        "tags": [
          "RequiredLearning"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedRequiredLearning"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RequiredLearning"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostedRequiredLearning"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/required-learning/{id}": {
      "get": {
        "tags": [
          "RequiredLearning"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedRequiredLearning"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RequiredLearning"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostedRequiredLearning"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "RequiredLearning"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostedRequiredLearning"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/search-terms": {
      "get": {
        "tags": [
          "SearchTerm"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedSearchTerm"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/shared-items": {
      "get": {
        "tags": [
          "SharedItem"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedSharedItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/recommendations": {
      "get": {
        "tags": [
          "SharedItem"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedSharedItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/shared-items/{id}": {
      "get": {
        "tags": [
          "SharedItem"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedSharedItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/recommendations/{id}": {
      "get": {
        "tags": [
          "SharedItem"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedSharedItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/skills": {
      "get": {
        "tags": [
          "Skill"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Skill"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/skill-plans": {
      "get": {
        "tags": [
          "SkillPlan"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedSkillPlan"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/skill-plans/{id}": {
      "get": {
        "tags": [
          "SkillPlan"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedSkillPlan"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/skill-plans/{id}/followers": {
      "get": {
        "tags": [
          "SkillPlan"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkillPlanFollower"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/skill-ratings": {
      "get": {
        "tags": [
          "SkillRating"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedSkillRating"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SkillRating"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedSkillRating"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/skill-ratings/{userSkillRatingId}": {
      "get": {
        "tags": [
          "SkillRating"
        ],
        "parameters": [
          {
            "name": "userSkillRatingId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedSkillRating"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SkillRating"
        ],
        "parameters": [
          {
            "name": "userSkillRatingId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedSkillRating"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/{id}/todays-learning": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modelUserId",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedTodaysLearning"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/{id}/completions": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "This endpoint retrieves all completions for a specific user. <br><br>For Global Admin Tool Organizations, if the user belongs to a Tenant Organization, then the `X-Degreed-Organization-Code` header must be provided.<h2>Required Scope</h2>`read`, `users:write`, `completions:read` or `completions:write`",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user to retrieve.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "description": "How to identify the user. Can be any of `id` (default), `employee-id`, or `email`.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedCompletion"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/{id}/accomplishments": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedAccomplishment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/{id}/certificates": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedAccomplishment"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/{id}/certifiable-skills": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedCertifiableSkill"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/{id}/user-skills": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSkill"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/{id}/skill-ratings": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedSkillRating"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/{id}/groups": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupMember"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/{id}/pathways": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPathway"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/{id}/required-learning": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedRequiredLearning"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/{id}/recommendation": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedSharedItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/{id}/shared-items": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedSharedItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/{id}/recommended-learning": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedSharedItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/{id}/user-custom-attributes": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCustomAttributeDetail"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/users/{id}/opportunities": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOpportunities"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/custom-attributes": {
      "get": {
        "tags": [
          "UserCustomAttribute"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomAttributeDetail"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserCustomAttribute"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomAttributeDetail"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/user-custom-attributes": {
      "get": {
        "tags": [
          "UserCustomAttribute"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCustomAttributeDetail"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserCustomAttribute"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCustomAttributeDetail"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/user-custom-attributes/{id}": {
      "get": {
        "tags": [
          "UserCustomAttribute"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCustomAttributeDetail"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "UserCustomAttribute"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCustomAttributeDetail"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/user-followers": {
      "get": {
        "tags": [
          "UserFollower"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFollower"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/user-skills": {
      "get": {
        "tags": [
          "UserSkill"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSkill"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserSkill"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostedUserSkill"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/user-skills/{userSkillId}": {
      "get": {
        "tags": [
          "UserSkill"
        ],
        "parameters": [
          {
            "name": "userSkillId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSkill"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UserSkill"
        ],
        "parameters": [
          {
            "name": "userSkillId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostedUserSkill"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/views": {
      "get": {
        "tags": [
          "View"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedView"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/webhooks/saba/{orgCode}": {
      "post": {
        "tags": [
          "WebHook"
        ],
        "parameters": [
          {
            "name": "orgCode",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v2/webhooks/learnUpon/{orgCode}": {
      "post": {
        "tags": [
          "WebHook"
        ],
        "parameters": [
          {
            "name": "orgCode",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v2/webhooks/learn-upon/{orgCode}": {
      "post": {
        "tags": [
          "WebHook"
        ],
        "parameters": [
          {
            "name": "orgCode",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Article": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "visibilityGroups": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GroupRelationship"
            }
          },
          "external-id": {
            "type": "string",
            "nullable": true
          },
          "serializeVisibilityGroups": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "format": {
            "type": "string",
            "nullable": true
          },
          "obsolete": {
            "type": "boolean"
          },
          "image-url": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "numWords": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "providerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "provider-code": {
            "type": "string",
            "nullable": true
          },
          "owner": {
            "type": "string",
            "description": "`owner` is usually the author of an article.",
            "nullable": true
          },
          "publish-date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created-at": {
            "type": "string",
            "format": "date-time"
          },
          "modified-at": {
            "type": "string",
            "format": "date-time"
          },
          "degreed-url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Assessment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "visibilityGroups": {
            "type": "array",
            "description": "The realationship `id` of the relationship object must be the id of the visibility group and the type of the relationship must be groups.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GroupRelationship"
            }
          },
          "external-id": {
            "type": "string",
            "description": "The external ID of the assessment.",
            "nullable": false
          },
          "serializeVisibilityGroups": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "The title of the assessment.",
            "nullable": false
          },
          "summary": {
            "type": "string",
            "description": "Short summary of the assessment.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "URL location where more information can be found.",
            "nullable": false
          },
          "degreed-url": {
            "type": "string",
            "nullable": true
          },
          "obsolete": {
            "type": "boolean"
          },
          "image-url": {
            "type": "string",
            "description": "Cover image of the assessment.",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "The language of the assessment.",
            "nullable": true
          },
          "num-questions": {
            "type": "integer",
            "description": "The number of words in the assessment.",
            "format": "int32",
            "nullable": false
          },
          "organization-id": {
            "type": "integer",
            "description": "The ID of the organization.",
            "format": "int64",
            "nullable": true
          },
          "provider-id": {
            "type": "string",
            "description": "The ID of the provider.",
            "nullable": true
          },
          "provider-code": {
            "type": "string",
            "description": "Unique provider code.",
            "nullable": true
          },
          "owner": {
            "type": "string",
            "nullable": true
          },
          "publish-date": {
            "type": "string",
            "description": "Date that the assessment was published.",
            "format": "date-time",
            "nullable": true
          },
          "created-at": {
            "type": "string",
            "format": "date-time"
          },
          "modified-at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AssignmentType": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1
        ]
      },
      "BaseResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BasicUser": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Book": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "visibilityGroups": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GroupRelationship"
            }
          },
          "external-id": {
            "type": "string",
            "description": "External ID of the book. This is usually the URL where the book can be found.",
            "nullable": false
          },
          "serializeVisibilityGroups": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "The title of the book.",
            "nullable": false
          },
          "subtitle": {
            "type": "string",
            "description": "The subtitle of the book.",
            "nullable": true
          },
          "authors": {
            "type": "string",
            "description": "Comma delimited list of authors.",
            "nullable": true
          },
          "pages": {
            "type": "integer",
            "description": "Number of pages.",
            "format": "int32",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "description": "Short summary of the book.",
            "nullable": true
          },
          "image-url": {
            "type": "string",
            "description": "Cover image of the book.",
            "nullable": true
          },
          "obsolete": {
            "type": "boolean",
            "description": "If the book should be marked as obsolete."
          },
          "publish-date": {
            "type": "string",
            "description": "Date that the book was published.",
            "format": "date-time",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "Language of the book.",
            "nullable": true
          },
          "degreed-url": {
            "type": "string",
            "nullable": true
          },
          "owner": {
            "type": "string",
            "nullable": true
          },
          "i-s-b-n-13": {
            "type": "string",
            "description": "ISBN13 number of the book.",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "providerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "created-at": {
            "type": "string",
            "format": "date-time"
          },
          "modified-at": {
            "type": "string",
            "format": "date-time"
          },
          "provider-code": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bundle": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "created-at": {
            "type": "string",
            "format": "date-time"
          },
          "modified-at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "BundleResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "containerId": {
            "type": "string",
            "nullable": true
          },
          "resourceId": {
            "type": "string",
            "nullable": true
          },
          "resourceType": {
            "$ref": "#/components/schemas/ResourceType"
          }
        },
        "additionalProperties": false
      },
      "Collaborator": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContentType": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          6,
          9,
          12,
          13,
          14,
          15
        ]
      },
      "Course": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "visibilityGroups": {
            "type": "array",
            "description": "The relationship `id` of the relationship object must be the id of the visibility group and the type of the relationship must be groups.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GroupRelationship"
            }
          },
          "external-id": {
            "type": "string",
            "description": "The external ID of the course.",
            "nullable": false
          },
          "serializeVisibilityGroups": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "organization-id": {
            "type": "integer",
            "description": "The ID of the organization.",
            "format": "int64",
            "nullable": true
          },
          "provider-id": {
            "type": "integer",
            "description": "The ID of the provider.",
            "format": "int64",
            "nullable": true
          },
          "provider-code": {
            "type": "string",
            "description": "Unique provider code.",
            "nullable": true
          },
          "degreed-url": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "The title of the course.",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "description": "Short summary of the course.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "URL location where more information can be found.",
            "nullable": false
          },
          "obsolete": {
            "type": "boolean",
            "description": "If the course should be marked as obsolete."
          },
          "image-url": {
            "type": "string",
            "description": "Cover image of the course.",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "Spoken language of the course.",
            "nullable": true
          },
          "duration": {
            "type": "number",
            "description": "Length of the course. Type is supplied with `duration-type`.",
            "format": "double",
            "nullable": true
          },
          "duration-type": {
            "type": "string",
            "description": "Seconds, minutes, hours, or days.",
            "nullable": true
          },
          "cost-units": {
            "type": "number",
            "description": "Units for the cost.",
            "format": "double",
            "nullable": true
          },
          "cost-unit-type": {
            "type": "string",
            "description": "The cost unit type can be any currency",
            "nullable": true
          },
          "format": {
            "type": "string",
            "description": "Format of the course. Possible values include `Virtual Classroom`, `Accredited`, `Instructor Led Training`, and `Online`.",
            "nullable": true
          },
          "difficulty": {
            "type": "string",
            "description": "Describes the difficulty level of the course.",
            "nullable": true
          },
          "video-url": {
            "type": "string",
            "description": "If the course has a video, supply the URL where the video can be accessed.",
            "nullable": true
          },
          "owner": {
            "type": "string",
            "nullable": true
          },
          "created-at": {
            "type": "string",
            "format": "date-time"
          },
          "modified-at": {
            "type": "string",
            "format": "date-time"
          },
          "hideProviderInCatalog": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CustomAttributeDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "dataType": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DetailedCompletion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "content-type": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "content-title": {
            "type": "string",
            "nullable": true
          },
          "content-duration": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "content-duration-type": {
            "type": "string",
            "nullable": true
          },
          "is-internal": {
            "type": "boolean"
          },
          "content-provider": {
            "type": "string",
            "nullable": true
          },
          "user-id": {
            "type": "string",
            "nullable": true
          },
          "employee-id": {
            "type": "string",
            "nullable": true
          },
          "completed-at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "added-at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "pointsEarned": {
            "type": "string",
            "nullable": true
          },
          "is-verified": {
            "type": "boolean"
          },
          "rating": {
            "type": "integer",
            "format": "int32"
          },
          "questions-correct": {
            "type": "integer",
            "format": "int32"
          },
          "percentile": {
            "type": "number",
            "format": "double"
          },
          "accessMethod": {
            "type": "string",
            "nullable": true
          },
          "userOrganizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "contentOrganizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "provider-id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "channelOrganizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DetailedOpportunity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "department": {
            "type": "string",
            "nullable": true
          },
          "jobRole": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "duration": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "durationUnits": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "visibility": {
            "type": "string",
            "nullable": true
          },
          "external-id": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "image-url": {
            "type": "string",
            "nullable": true
          },
          "is-obsolete": {
            "type": "boolean"
          },
          "created-at": {
            "type": "string",
            "format": "date-time"
          },
          "modified-at": {
            "type": "string",
            "format": "date-time"
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "providerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "degreed-url": {
            "type": "string",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "nullable": true
          },
          "matchedSkills": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/OpportunitySkill"
            }
          },
          "collaborators": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Collaborator"
            }
          },
          "pathways": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BaseResource"
            }
          },
          "plans": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BaseResource"
            }
          }
        },
        "additionalProperties": false
      },
      "DetailedPathway": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "visibility": {
            "type": "string",
            "nullable": true
          },
          "degreed-url": {
            "type": "string",
            "nullable": true
          },
          "sections": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PathwaySection"
            }
          },
          "collaborators": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DetailedPathwayCollaborator"
            }
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "created-at": {
            "type": "string",
            "format": "date-time"
          },
          "modified-at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isEndorsed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DetailedPathwayCollaborator": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "modified-at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "DetailedRequiredLearning": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "users": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BasicUser"
            }
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "providerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "contentId": {
            "type": "string",
            "nullable": true
          },
          "content-type": {
            "type": "string",
            "nullable": true
          },
          "contentTitle": {
            "type": "string",
            "nullable": true
          },
          "contentUrl": {
            "type": "string",
            "nullable": true
          },
          "contentProvider": {
            "type": "string",
            "nullable": true
          },
          "assignmentType": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "dueAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created-at": {
            "type": "string",
            "format": "date-time"
          },
          "modified-at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DetailedSkillPlan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "sections": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SkillPlanSection"
            }
          },
          "visibility": {
            "type": "string",
            "nullable": true
          },
          "canCollaborate": {
            "type": "boolean"
          },
          "degreed-url": {
            "type": "string",
            "nullable": true
          },
          "created-at": {
            "type": "string",
            "format": "date-time"
          },
          "modified-at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planType": {
            "type": "string",
            "nullable": true
          },
          "isEndorsed": {
            "type": "boolean"
          },
          "collaborators": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SkillPlanCollaborator"
            }
          }
        },
        "additionalProperties": false
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "visibilityGroups": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GroupRelationship"
            }
          },
          "external-id": {
            "type": "string",
            "nullable": true
          },
          "serializeVisibilityGroups": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "image-url": {
            "type": "string",
            "nullable": true
          },
          "obsolete": {
            "type": "boolean"
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "publish-date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "owner": {
            "type": "string",
            "nullable": true
          },
          "format": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "degreed-url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupMember": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean",
            "readOnly": true
          },
          "groupId": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "joinedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "groupRole": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupMembership": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hasDetailedView": {
            "type": "boolean",
            "readOnly": true
          },
          "groupId": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "joinedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "groupRole": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupOrganization": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean",
            "readOnly": true
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GroupPrivacyLevel": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "GroupRelationship": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupType": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1
        ]
      },
      "InvolvementLevel": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          2,
          4,
          6
        ]
      },
      "JToken": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/JToken"
        }
      },
      "ListedAccomplishment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "image-url": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "contentTypeId": {
            "$ref": "#/components/schemas/ContentType"
          }
        },
        "additionalProperties": false
      },
      "ListedCertifiableSkill": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "skillUniqueIdentifier": {
            "type": "string",
            "format": "uuid"
          },
          "isFeatured": {
            "type": "boolean"
          },
          "created-at": {
            "type": "string",
            "format": "date-time"
          },
          "modified-at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "visibility": {
            "type": "string",
            "nullable": true
          },
          "cost": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ListedCertificate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "issuedBy": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "certificateNumber": {
            "type": "string",
            "nullable": true
          },
          "contentTypeId": {
            "$ref": "#/components/schemas/ContentType"
          },
          "userId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListedCompletion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "content-id": {
            "type": "string",
            "description": "The ID of the content to retrieve.",
            "nullable": true
          },
          "content-type": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "content-title": {
            "type": "string",
            "nullable": true
          },
          "content-duration": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "content-duration-type": {
            "type": "string",
            "nullable": true
          },
          "is-internal": {
            "type": "boolean"
          },
          "content-provider": {
            "type": "string",
            "nullable": true
          },
          "user-id": {
            "type": "string",
            "nullable": true
          },
          "employee-id": {
            "type": "string",
            "nullable": true
          },
          "completed-at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "added-at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "points-earned": {
            "type": "string",
            "nullable": true
          },
          "is-verified": {
            "type": "boolean"
          },
          "rating": {
            "type": "integer",
            "format": "int32"
          },
          "questions-correct": {
            "type": "integer",
            "format": "int32"
          },
          "percentile": {
            "type": "number",
            "format": "double"
          },
          "access-method": {
            "type": "string",
            "nullable": true
          },
          "user-organization-id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "content-organization-id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListedContent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "String containing the name of the skill. The name is also the unique identifier.",
            "nullable": false
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "Type of object that will be added as a relationship. Use `skills`.",
            "nullable": true,
            "default": "skills"
          },
          "content-type": {
            "type": "string",
            "nullable": true
          },
          "external-id": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "format": {
            "type": "string",
            "nullable": true
          },
          "is-obsolete": {
            "type": "boolean"
          },
          "image-url": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "duration": {
            "type": "number",
            "format": "double"
          },
          "duration-type": {
            "type": "string",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "nullable": true
          },
          "is-internal": {
            "type": "boolean"
          },
          "owner": {
            "type": "string",
            "nullable": true
          },
          "created-at": {
            "type": "string",
            "format": "date-time"
          },
          "modified-at": {
            "type": "string",
            "format": "date-time"
          },
          "degreed-url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListedGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "privacy": {
            "$ref": "#/components/schemas/GroupPrivacyLevel"
          },
          "externalGroupId": {
            "type": "string",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "created-at": {
            "type": "string",
            "format": "date-time"
          },
          "modified-at": {
            "type": "string",
            "format": "date-time"
          },
          "groupType": {
            "$ref": "#/components/schemas/GroupType"
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListedLogin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "loggedInAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListedOpportunity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "department": {
            "type": "string",
            "nullable": true
          },
          "jobRole": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "duration": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "durationUnits": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "visibility": {
            "type": "string",
            "nullable": true
          },
          "external-id": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "image-url": {
            "type": "string",
            "nullable": true
          },
          "is-obsolete": {
            "type": "boolean"
          },
          "created-at": {
            "type": "string",
            "format": "date-time"
          },
          "modified-at": {
            "type": "string",
            "format": "date-time"
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "providerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "degreed-url": {
            "type": "string",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListedPathway": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "visibility": {
            "type": "string",
            "nullable": true
          },
          "degreed-url": {
            "type": "string",
            "nullable": true
          },
          "createdByUserId": {
            "type": "string",
            "nullable": true
          },
          "created-at": {
            "type": "string",
            "format": "date-time"
          },
          "modified-at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isEndorsed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ListedPathwayCollaborator": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "created-at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListedPathwayFollower": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean",
            "readOnly": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "created-at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ListedPathwayGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean",
            "readOnly": true
          },
          "groupId": {
            "type": "string",
            "nullable": true
          },
          "created-at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ListedPathwayTag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean",
            "readOnly": true
          },
          "tag": {
            "type": "string",
            "nullable": true
          },
          "created-at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ListedPexUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "organizationEmail": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListedProvider": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListedRequiredLearning": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "contentId": {
            "type": "string",
            "nullable": true
          },
          "content-type": {
            "type": "string",
            "nullable": true
          },
          "contentTitle": {
            "type": "string",
            "nullable": true
          },
          "contentUrl": {
            "type": "string",
            "nullable": true
          },
          "contentProvider": {
            "type": "string",
            "nullable": true
          },
          "assignmentType": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "dueAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created-at": {
            "type": "string",
            "format": "date-time"
          },
          "modified-at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListedSearchTerm": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hasDetailedView": {
            "type": "boolean",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ListedSharedItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "recipientUserId": {
            "type": "string",
            "nullable": true
          },
          "recipientEmployeeId": {
            "type": "string",
            "nullable": true
          },
          "contentId": {
            "type": "string",
            "nullable": true
          },
          "content-type": {
            "type": "string",
            "nullable": true
          },
          "contentUrl": {
            "type": "string",
            "nullable": true
          },
          "contentTitle": {
            "type": "string",
            "nullable": true
          },
          "degreed-url": {
            "type": "string",
            "nullable": true
          },
          "contentProvider": {
            "type": "string",
            "nullable": true
          },
          "pathwayId": {
            "type": "string",
            "nullable": true
          },
          "recommendedAt": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "assignmentType": {
            "type": "string",
            "nullable": true
          },
          "modified-at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "is-internal": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ListedSkillPlan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "visibility": {
            "type": "string",
            "nullable": true
          },
          "degreed-url": {
            "type": "string",
            "nullable": true
          },
          "created-at": {
            "type": "string",
            "format": "date-time"
          },
          "modified-at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planType": {
            "type": "string",
            "nullable": true
          },
          "isEndorsed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ListedSkillRating": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "skillId": {
            "type": "string",
            "nullable": true
          },
          "skillName": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "type": "integer",
            "format": "int32"
          },
          "ratingType": {
            "type": "string",
            "nullable": true
          },
          "isEndorsed": {
            "type": "boolean"
          },
          "managerId": {
            "type": "string",
            "nullable": true
          },
          "certifiableSkillGuid": {
            "type": "string",
            "format": "uuid"
          },
          "certifiableSkillId": {
            "type": "string",
            "nullable": true
          },
          "ratedAt": {
            "type": "string",
            "format": "date-time"
          },
          "skillScale": {
            "$ref": "#/components/schemas/SkillScale"
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "enableCustomRatingScale": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ListedTodaysLearning": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "contentId": {
            "type": "string",
            "nullable": true
          },
          "content-type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "image-url": {
            "type": "string",
            "nullable": true
          },
          "duration": {
            "type": "number",
            "format": "double"
          },
          "duration-type": {
            "type": "string",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "nullable": true
          },
          "suggestedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ListedView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean",
            "readOnly": true
          },
          "contentId": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "content-type": {
            "type": "string",
            "nullable": true
          },
          "contentTitle": {
            "type": "string",
            "nullable": true
          },
          "contentProvider": {
            "type": "string",
            "nullable": true
          },
          "viewCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OpportunitySkill": {
        "type": "object",
        "properties": {
          "skillName": {
            "type": "string",
            "nullable": true
          },
          "minimumRating": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PathwayLesson": {
        "type": "object",
        "properties": {
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "resources": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PathwayResource"
            }
          }
        },
        "additionalProperties": false
      },
      "PathwayResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "requirement": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PathwaySection": {
        "type": "object",
        "properties": {
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "lessons": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PathwayLesson"
            }
          }
        },
        "additionalProperties": false
      },
      "Podcast": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "visibilityGroups": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GroupRelationship"
            }
          },
          "external-id": {
            "type": "string",
            "description": "The external ID of the podcast.",
            "nullable": false
          },
          "serializeVisibilityGroups": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "The title of the podcast.",
            "nullable": false
          },
          "summary": {
            "type": "string",
            "description": "Short summary of the podcast.",
            "nullable": true
          },
          "organization-id": {
            "type": "string",
            "description": "The ID of the organization.",
            "format": "int64",
            "nullable": true
          },
          "provider-id": {
            "type": "integer",
            "description": "The ID of the provider.",
            "format": "int64",
            "nullable": true
          },
          "provider-code": {
            "type": "string",
            "description": "Unique provider code.",
            "nullable": true
          },
          "obsolete": {
            "type": "boolean",
            "description": "If the podcast should be marked as obsolete."
          },
          "duration": {
            "type": "number",
            "description": "Length of the podcast. Type is supplied with duration-type.",
            "format": "double",
            "nullable": true
          },
          "duration-type": {
            "type": "string",
            "description": "Seconds, minutes, hours, or days.",
            "nullable": true
          },
          "format": {
            "type": "string",
            "description": "The type of podcast format.",
            "nullable": true
          },
          "feed-url": {
            "type": "string",
            "description": "The URL of the podcast feed.",
            "nullable": true
          },
          "image-url": {
            "type": "string",
            "description": "Cover image of the podcast.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "URL location where more information can be found.",
            "nullable": false
          },
          "degreed-url": {
            "type": "string",
            "nullable": true
          },
          "author": {
            "type": "string",
            "description": "The creator of the podcast.",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "Spoken language of the podcast.",
            "nullable": true
          },
          "owner": {
            "type": "string",
            "nullable": true
          },
          "publish-date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created-at": {
            "type": "string",
            "format": "date-time"
          },
          "modified-at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "PostedAccomplishment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "userIdentifierType": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "image-url": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "contentTypeId": {
            "$ref": "#/components/schemas/ContentType"
          }
        },
        "additionalProperties": false
      },
      "PostedCertificate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "issuedBy": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "certificateNumber": {
            "type": "string",
            "nullable": true
          },
          "contentTypeId": {
            "$ref": "#/components/schemas/ContentType"
          },
          "userIdentifierType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostedCompletion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "organization-id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "channelOrganizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "provider-id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "user-id": {
            "type": "string",
            "description": "The unique ID of the user who completed it.",
            "nullable": false
          },
          "user-identifier-type": {
            "type": "string",
            "description": "Can be any of `UserId`, `Email`, `EmployeeId`, `AliasUid`, or `AliasEmail`.",
            "nullable": false
          },
          "content-id": {
            "type": "string",
            "description": "Unique ID identifying the content.",
            "nullable": false
          },
          "content-id-type": {
            "type": "string",
            "description": "Can be any of `ExternalId`, `Id`, or `ContentUrl`.",
            "nullable": false
          },
          "content-type": {
            "type": "string",
            "description": "Can be any of `Article`, `Book`, `Course`, `Event`, `Podcast`, `Task`, `Video` or `Assessment`.",
            "nullable": true
          },
          "completed-at": {
            "type": "string",
            "description": "Date when the completion was created (For a `Task` the server sets `completed-at` date and it cannot be overriden.)",
            "format": "date-time",
            "nullable": false
          },
          "is-verified": {
            "type": "boolean",
            "description": "The completion is verified.",
            "nullable": false,
            "default": true
          },
          "questions-correct": {
            "type": "integer",
            "description": "Specific to `Assessments`. Number of questions answered correctly.",
            "format": "int32",
            "default": 0
          },
          "percentile": {
            "type": "number",
            "description": "Specific to `Assessments`. The user's percentile.",
            "format": "double",
            "default": 0
          },
          "duration": {
            "type": "number",
            "format": "double"
          },
          "involvementLevel": {
            "$ref": "#/components/schemas/InvolvementLevel"
          }
        },
        "additionalProperties": false
      },
      "PostedOpportunity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "department": {
            "type": "string",
            "nullable": true
          },
          "jobRole": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "duration": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "durationUnits": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "visibility": {
            "type": "string",
            "nullable": true
          },
          "external-id": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "image-url": {
            "type": "string",
            "nullable": true
          },
          "is-obsolete": {
            "type": "boolean"
          },
          "created-at": {
            "type": "string",
            "format": "date-time"
          },
          "modified-at": {
            "type": "string",
            "format": "date-time"
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "providerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "matchedSkills": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/OpportunitySkill"
            }
          }
        },
        "additionalProperties": false
      },
      "PostedRequiredLearning": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "providerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "userIdentifierType": {
            "type": "string",
            "nullable": true
          },
          "contentId": {
            "type": "string",
            "nullable": true
          },
          "contentIdType": {
            "type": "string",
            "nullable": true
          },
          "content-type": {
            "type": "string",
            "nullable": true
          },
          "externalEnrollmentId": {
            "type": "string",
            "nullable": true
          },
          "assignmentType": {
            "$ref": "#/components/schemas/AssignmentType"
          },
          "dueAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created-at": {
            "type": "string",
            "format": "date-time"
          },
          "modified-at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostedUserSkill": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "userIdentifierType": {
            "type": "string",
            "nullable": true
          },
          "skillName": {
            "type": "string",
            "nullable": true
          },
          "isFocus": {
            "type": "boolean"
          },
          "targetRating": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ResourceType": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          10,
          11,
          16,
          20
        ]
      },
      "Skill": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean",
            "readOnly": true
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SkillPlanCollaborator": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SkillPlanFollower": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean",
            "readOnly": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "enrolledAt": {
            "type": "string",
            "format": "date-time"
          },
          "isPrimaryPlan": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SkillPlanResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SkillPlanSection": {
        "type": "object",
        "properties": {
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "targetRating": {
            "type": "integer",
            "format": "int32"
          },
          "resources": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SkillPlanResource"
            }
          }
        },
        "additionalProperties": false
      },
      "SkillScale": {
        "type": "integer",
        "format": "int32",
        "enum": [
          3,
          5
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "organizationEmail": {
            "type": "string",
            "nullable": true
          },
          "personalEmail": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "hashedPassword": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "profileVisibility": {
            "type": "string",
            "nullable": true
          },
          "bio": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "profileImageUrl": {
            "type": "string",
            "nullable": true
          },
          "loginDisabled": {
            "type": "boolean"
          },
          "restricted": {
            "type": "boolean"
          },
          "isManaged": {
            "type": "boolean"
          },
          "isActiveLearner": {
            "type": "boolean"
          },
          "permissionRole": {
            "type": "string",
            "nullable": true
          },
          "jobRole": {
            "type": "string",
            "nullable": true
          },
          "aliasUid": {
            "type": "string",
            "nullable": true
          },
          "preferredLanguage": {
            "type": "string",
            "nullable": true
          },
          "realTimeEmailNotification": {
            "type": "boolean",
            "nullable": true
          },
          "dailyDigestEmail": {
            "type": "boolean",
            "nullable": true
          },
          "weeklyDigestEmail": {
            "type": "boolean",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "created-at": {
            "type": "string",
            "format": "date-time"
          },
          "firstLoginAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastLoginAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "totalPoints": {
            "type": "number",
            "format": "double"
          },
          "dailyLogins": {
            "type": "integer",
            "format": "int32"
          },
          "managerId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserCustomAttributeDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean",
            "readOnly": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "customAttributes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JToken"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserFollower": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean",
            "readOnly": true
          },
          "followerId": {
            "type": "string",
            "nullable": true
          },
          "followerEmployeeId": {
            "type": "string",
            "nullable": true
          },
          "followingId": {
            "type": "string",
            "nullable": true
          },
          "followingEmployeeId": {
            "type": "string",
            "nullable": true
          },
          "followedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UserOpportunities": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "department": {
            "type": "string",
            "nullable": true
          },
          "jobRole": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "duration": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "durationUnits": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "visibility": {
            "type": "string",
            "nullable": true
          },
          "external-id": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "image-url": {
            "type": "string",
            "nullable": true
          },
          "is-obsolete": {
            "type": "boolean"
          },
          "created-at": {
            "type": "string",
            "format": "date-time"
          },
          "modified-at": {
            "type": "string",
            "format": "date-time"
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "providerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "degreed-url": {
            "type": "string",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "nullable": true
          },
          "appliedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "applicationStatus": {
            "type": "string",
            "nullable": true
          },
          "stage": {
            "type": "string",
            "nullable": true
          },
          "opportunityId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserPathway": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean",
            "readOnly": true
          },
          "pathwayId": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "dateEnrolled": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "itemsTotal": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "itemsCompleted": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "percentComplete": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "UserSkill": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "skillId": {
            "type": "string",
            "nullable": true
          },
          "skillName": {
            "type": "string",
            "nullable": true
          },
          "isFocus": {
            "type": "boolean"
          },
          "isEndorsed": {
            "type": "boolean"
          },
          "targetRating": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "followedAt": {
            "type": "string",
            "format": "date-time"
          },
          "certifiableSkillId": {
            "type": "string",
            "nullable": true
          },
          "certifiableSkillGuid": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Video": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasDetailedView": {
            "type": "boolean"
          },
          "hasAttributes": {
            "type": "boolean",
            "readOnly": true
          },
          "maxLimit": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "visibility-groups": {
            "type": "array",
            "description": "The relationship `id` of the relationship object must be the id of the visibility group and the type of the relationship must be `groups`.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GroupRelationship"
            }
          },
          "external-id": {
            "type": "string",
            "description": "The external ID of the video.",
            "nullable": false
          },
          "serializeVisibilityGroups": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "organization-id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "provider-id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "provider-code": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "The title of the video.",
            "nullable": false
          },
          "summary": {
            "type": "string",
            "description": "Short summary of the video.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "URL location where more information can be found.",
            "nullable": false
          },
          "degreed-url": {
            "type": "string",
            "nullable": true
          },
          "obsolete": {
            "type": "boolean",
            "description": "If the video should be marked as obsolete."
          },
          "image-url": {
            "type": "string",
            "description": "Cover image of the video.",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "Spoken language of the video.",
            "nullable": true
          },
          "duration": {
            "type": "number",
            "description": "Length of the video. Type is supplied with `duration-type`.",
            "format": "integer",
            "nullable": true
          },
          "duration-type": {
            "type": "string",
            "description": "Seconds, minutes, hours, or days.",
            "nullable": true
          },
          "owner": {
            "type": "string",
            "nullable": true
          },
          "publish-date": {
            "type": "string",
            "description": "Date that the video was published.",
            "format": "date-time",
            "nullable": true
          },
          "created-at": {
            "type": "string",
            "format": "date-time"
          },
          "modified-at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "apiv2completions_data_attributes": {
        "required": [
          "completed-at",
          "content-id",
          "content-id-type",
          "content-type",
          "user-id",
          "user-identifier-type"
        ],
        "type": "object",
        "properties": {
          "user-id": {
            "type": "string",
            "description": "The unique ID of the user who completed it."
          },
          "user-identifier-type": {
            "type": "string",
            "description": "Can be any of `UserId`, `Email`, `EmployeeId`, `AliasUid`, or `AliasEmail`.",
            "nullable": false
          },
          "content-id": {
            "type": "string",
            "description": "Unique ID identifying the content.",
            "nullable": false
          },
          "content-id-type": {
            "type": "string",
            "description": "Can be any of `ExternalId`, `Id`, or `ContentUrl`.",
            "nullable": false
          },
          "content-type": {
            "type": "string",
            "description": "Can be any of `Article`, `Book`, `Course`, `Event`, `Podcast`, `Task`, `Video` or `Assessment`.",
            "nullable": true
          },
          "completed-at": {
            "type": "string",
            "description": "Date when the completion was created (For a `Task` the server sets `completed-at` date and it cannot be overriden.)",
            "format": "date-time",
            "nullable": false
          },
          "is-verified": {
            "type": "boolean",
            "description": "The completion is verified.",
            "nullable": false,
            "default": true
          },
          "questions-correct": {
            "type": "integer",
            "description": "Specific to `Assessments`. Number of questions answered correctly.",
            "format": "int32",
            "default": 0
          },
          "percentile": {
            "type": "number",
            "description": "Specific to `Assessments`. The user's percentile.",
            "format": "double",
            "default": 0
          }
        }
      },
      "apiv2completions_data": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "completions"
          },
          "attributes": {
            "$ref": "#/components/schemas/apiv2completions_data_attributes"
          }
        }
      },
      "v2_completions_body": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/apiv2completions_data"
          }
        }
      },
      "completions_id_body": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/apiv2completions_data"
          }
        }
      },
      "apiv2contentbooks_data_attributes": {
        "required": [
          "external-id",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the book.",
            "nullable": false
          },
          "subtitle": {
            "type": "string",
            "description": "The subtitle of the book.",
            "nullable": true
          },
          "authors": {
            "type": "string",
            "description": "Comma delimited list of authors.",
            "nullable": true
          },
          "pages": {
            "type": "integer",
            "description": "Number of pages.",
            "format": "int32",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "description": "Short summary of the book.",
            "nullable": true
          },
          "image-url": {
            "type": "string",
            "description": "Cover image of the book.",
            "nullable": true
          },
          "obsolete": {
            "type": "boolean",
            "description": "If the book should be marked as obsolete."
          },
          "publish-date": {
            "type": "string",
            "description": "Date that the book was published.",
            "format": "date-time",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "Language of the book.",
            "nullable": true
          },
          "external-id": {
            "type": "string",
            "description": "External ID of the book. This is usually the URL where the book can be found.",
            "nullable": false
          },
          "i-s-b-n-13": {
            "type": "string",
            "description": "ISBN13 number of the book.",
            "nullable": true
          }
        }
      },
      "apiv2contentbooks_data": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "content/books"
          },
          "attributes": {
            "$ref": "#/components/schemas/apiv2contentbooks_data_attributes"
          }
        }
      },
      "content_books_body": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/apiv2contentbooks_data"
          }
        }
      },
      "apiv2contentbooksid_data_attributes": {
        "required": [
          "external-id",
          "title"
        ],
        "type": "object",
        "properties": {
          "external-id": {
            "type": "string",
            "description": "External ID of the book. This is usually the URL where the book can be found.",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "The title of the book.",
            "nullable": false
          },
          "subtitle": {
            "type": "string",
            "description": "The subtitle of the book.",
            "nullable": true
          },
          "authors": {
            "type": "string",
            "description": "Comma delimited list of authors.",
            "nullable": true
          },
          "pages": {
            "type": "integer",
            "description": "Number of pages.",
            "format": "int32",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "description": "Short summary of the book.",
            "nullable": true
          },
          "image-url": {
            "type": "string",
            "description": "Cover image of the book.",
            "nullable": true
          },
          "obsolete": {
            "type": "boolean",
            "description": "If the book should be marked as obsolete."
          },
          "publish-date": {
            "type": "string",
            "description": "Date that the book was published.",
            "format": "date-time",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "Language of the book.",
            "nullable": true
          },
          "i-s-b-n-13": {
            "type": "string",
            "description": "ISBN13 number of the book.",
            "nullable": true
          }
        }
      },
      "apiv2contentbooksid_data": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "content/books"
          },
          "attributes": {
            "$ref": "#/components/schemas/apiv2contentbooksid_data_attributes"
          }
        }
      },
      "books_id_body": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/apiv2contentbooksid_data"
          }
        }
      },
      "apiv2contentvideos_data_attributes": {
        "required": [
          "duration",
          "duration-type",
          "external-id",
          "title"
        ],
        "type": "object",
        "properties": {
          "external-id": {
            "type": "string",
            "description": "The external ID of the video.",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "The title of the video.",
            "nullable": false
          },
          "summary": {
            "type": "string",
            "description": "Short summary of the video.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "URL location where more information can be found.",
            "nullable": false
          },
          "obsolete": {
            "type": "boolean",
            "description": "If the video should be marked as obsolete."
          },
          "image-url": {
            "type": "string",
            "description": "Cover image of the video.",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "Spoken language of the video.",
            "nullable": true
          },
          "duration": {
            "type": "number",
            "description": "Length of the video. Type is supplied with `duration-type`.",
            "format": "integer",
            "nullable": true
          },
          "duration-type": {
            "type": "string",
            "description": "Seconds, minutes, hours, or days.",
            "nullable": true
          },
          "publish-date": {
            "type": "string",
            "description": "Date that the video was published.",
            "format": "date-time",
            "nullable": true
          },
          "visibilityGroups": {
            "type": "array",
            "description": "The realationship `id` of the relationship object must be the id of the visibility group and the type of the relationship must be groups.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GroupRelationship"
            }
          }
        }
      },
      "apiv2contentvideos_data": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/apiv2contentvideos_data_attributes"
          }
        }
      },
      "content_videos_body": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/apiv2contentvideos_data"
          }
        }
      },
      "apiv2contentvideosid_data_attributes": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the video.",
            "nullable": false
          },
          "summary": {
            "type": "string",
            "description": "Short summary of the video.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "URL location where more information can be found.",
            "nullable": false
          },
          "obsolete": {
            "type": "boolean",
            "description": "If the video should be marked as obsolete."
          },
          "image-url": {
            "type": "string",
            "description": "Cover image of the video.",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "Spoken language of the video.",
            "nullable": true
          },
          "duration": {
            "type": "number",
            "description": "Length of the video. Type is supplied with `duration-type`.",
            "format": "integer",
            "nullable": true
          },
          "duration-type": {
            "type": "string",
            "description": "Seconds, minutes, hours, or days.",
            "nullable": true
          },
          "publish-date": {
            "type": "string",
            "description": "Date that the video was published.",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "apiv2contentvideosid_data": {
        "required": [
          "title",
          "url"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/apiv2contentvideosid_data_attributes"
          }
        }
      },
      "videos_id_body": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/apiv2contentvideosid_data"
          }
        }
      },
      "apiv2contentcourses_data_attributes": {
        "required": [
          "external-id",
          "url"
        ],
        "type": "object",
        "properties": {
          "external-id": {
            "type": "string",
            "description": "The external ID of the course.",
            "nullable": false
          },
          "organization-id": {
            "type": "integer",
            "description": "The ID of the organization.",
            "format": "int64",
            "nullable": true
          },
          "provider-id": {
            "type": "integer",
            "description": "The ID of the provider.",
            "format": "int64",
            "nullable": true
          },
          "provider-code": {
            "type": "string",
            "description": "Unique provider code.",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "The title of the course.",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "description": "Short summary of the course.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "URL location where more information can be found.",
            "nullable": false
          },
          "obsolete": {
            "type": "boolean",
            "description": "If the course should be marked as obsolete."
          },
          "image-url": {
            "type": "string",
            "description": "Cover image of the course.",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "Spoken language of the course.",
            "nullable": true
          },
          "duration": {
            "type": "number",
            "description": "Length of the course. Type is supplied with `duration-type`.",
            "format": "double",
            "nullable": true
          },
          "duration-type": {
            "type": "string",
            "description": "Seconds, minutes, hours, or days.",
            "nullable": true
          },
          "cost-units": {
            "type": "number",
            "description": "Units for the cost.",
            "format": "double",
            "nullable": true
          },
          "cost-unit-type": {
            "type": "string",
            "description": "The cost unit type can be any currency",
            "nullable": true
          },
          "format": {
            "type": "string",
            "description": "Format of the course. Possible values include `Virtual Classroom`, `Accredited`, `Instructor Led Training`, and `Online`.",
            "nullable": true
          },
          "difficulty": {
            "type": "string",
            "description": "Describes the difficulty level of the course.",
            "nullable": true
          },
          "video-url": {
            "type": "string",
            "description": "If the course has a video, supply the URL where the video can be accessed.",
            "nullable": true
          },
          "visibilityGroups": {
            "type": "array",
            "description": "The relationship `id` of the relationship object must be the id of the visibility group and the type of the relationship must be groups.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GroupRelationship"
            }
          }
        }
      },
      "apiv2contentcourses_data": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/apiv2contentcourses_data_attributes"
          }
        }
      },
      "content_courses_body": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/apiv2contentcourses_data"
          }
        }
      },
      "apiv2contentcoursesid_data_attributes": {
        "required": [
          "external-id",
          "title"
        ],
        "type": "object",
        "properties": {
          "external-id": {
            "type": "string",
            "description": "The external ID of the course.",
            "nullable": false
          },
          "provider-code": {
            "type": "string",
            "description": "Unique provider code.",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "The title of the course.",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "description": "Short summary of the course.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "URL location where more information can be found.",
            "nullable": false
          },
          "obsolete": {
            "type": "boolean",
            "description": "If the course should be marked as obsolete."
          },
          "image-url": {
            "type": "string",
            "description": "Cover image of the course.",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "Spoken language of the course.",
            "nullable": true
          },
          "duration": {
            "type": "number",
            "description": "Length of the course. Type is supplied with `duration-type`.",
            "format": "double",
            "nullable": true
          },
          "duration-type": {
            "type": "string",
            "description": "Seconds, minutes, hours, or days.",
            "nullable": true
          },
          "cost-units": {
            "type": "number",
            "description": "Units for the cost.",
            "format": "double",
            "nullable": true
          },
          "cost-unit-type": {
            "type": "string",
            "description": "The cost unit type can be any currency",
            "nullable": true
          },
          "format": {
            "type": "string",
            "description": "Format of the course. Possible values include `Virtual Classroom`, `Accredited`, `Instructor Led Training`, and `Online`.",
            "nullable": true
          },
          "difficulty": {
            "type": "string",
            "description": "Describes the difficulty level of the course.",
            "nullable": true
          },
          "video-url": {
            "type": "string",
            "description": "If the course has a video, supply the URL where the video can be accessed.",
            "nullable": true
          },
          "visibilityGroups": {
            "type": "array",
            "description": "The realationship `id` of the relationship object must be the id of the visibility group and the type of the relationship must be groups.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GroupRelationship"
            }
          }
        }
      },
      "apiv2contentcoursesid_data": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "content/courses"
          },
          "attributes": {
            "$ref": "#/components/schemas/apiv2contentcoursesid_data_attributes"
          }
        }
      },
      "courses_id_body": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/apiv2contentcoursesid_data"
          }
        }
      },
      "apiv2contentpodcasts_data_attributes": {
        "required": [
          "duration",
          "duration-type",
          "external-id",
          "title"
        ],
        "type": "object",
        "properties": {
          "external-id": {
            "type": "string",
            "description": "The external ID of the podcast.",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "The title of the podcast.",
            "nullable": false
          },
          "summary": {
            "type": "string",
            "description": "Short summary of the podcast.",
            "nullable": true
          },
          "organization-id": {
            "type": "string",
            "description": "The ID of the organization.",
            "format": "int64",
            "nullable": true
          },
          "provider-id": {
            "type": "integer",
            "description": "The ID of the provider.",
            "format": "int64",
            "nullable": true
          },
          "provider-code": {
            "type": "string",
            "description": "Unique provider code.",
            "nullable": true
          },
          "obsolete": {
            "type": "boolean",
            "description": "If the podcast should be marked as obsolete."
          },
          "duration": {
            "type": "number",
            "description": "Length of the podcast. Type is supplied with duration-type.",
            "format": "double",
            "nullable": true
          },
          "duration-type": {
            "type": "string",
            "description": "Seconds, minutes, hours, or days.",
            "nullable": true
          },
          "format": {
            "type": "string",
            "description": "The type of podcast format.",
            "nullable": true
          },
          "feed-url": {
            "type": "string",
            "description": "The URL of the podcast feed.",
            "nullable": true
          },
          "image-url": {
            "type": "string",
            "description": "Cover image of the podcast.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "URL location where more information can be found.",
            "nullable": false
          },
          "author": {
            "type": "string",
            "description": "The creator of the podcast.",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "Spoken language of the podcast.",
            "nullable": true
          }
        }
      },
      "apiv2contentpodcasts_data": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/apiv2contentpodcasts_data_attributes"
          }
        }
      },
      "content_podcasts_body": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/apiv2contentpodcasts_data"
          }
        }
      },
      "apiv2contentpodcastsid_data_attributes": {
        "type": "object",
        "properties": {
          "external-id": {
            "type": "string",
            "description": "The external ID of the podcast.",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "The title of the podcast.",
            "nullable": false
          },
          "summary": {
            "type": "string",
            "description": "Short summary of the podcast.",
            "nullable": true
          },
          "organization-id": {
            "type": "string",
            "description": "The ID of the organization.",
            "format": "int64",
            "nullable": true
          },
          "provider-id": {
            "type": "integer",
            "description": "The ID of the provider.",
            "format": "int64",
            "nullable": true
          },
          "provider-code": {
            "type": "string",
            "description": "Unique provider code.",
            "nullable": true
          },
          "obsolete": {
            "type": "boolean",
            "description": "If the podcast should be marked as obsolete."
          },
          "duration": {
            "type": "number",
            "description": "Length of the podcast. Type is supplied with duration-type.",
            "format": "double",
            "nullable": true
          },
          "duration-type": {
            "type": "string",
            "description": "Seconds, minutes, hours, or days.",
            "nullable": true
          },
          "format": {
            "type": "string",
            "description": "The type of podcast format.",
            "nullable": true
          },
          "feed-url": {
            "type": "string",
            "description": "The URL of the podcast feed.",
            "nullable": true
          },
          "image-url": {
            "type": "string",
            "description": "Cover image of the podcast.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "URL location where more information can be found.",
            "nullable": false
          },
          "author": {
            "type": "string",
            "description": "The creator of the podcast.",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "Spoken language of the podcast.",
            "nullable": true
          }
        }
      },
      "apiv2contentpodcastsid_data": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "content/podcasts"
          },
          "attributes": {
            "$ref": "#/components/schemas/apiv2contentpodcastsid_data_attributes"
          }
        }
      },
      "podcasts_id_body": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/apiv2contentpodcastsid_data"
          }
        }
      },
      "apiv2contentassessments_data_attributes": {
        "required": [
          "external-id",
          "num-questions",
          "title",
          "url"
        ],
        "type": "object",
        "properties": {
          "external-id": {
            "type": "string",
            "description": "The external ID of the assessment.",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "The title of the assessment.",
            "nullable": false
          },
          "summary": {
            "type": "string",
            "description": "Short summary of the assessment.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "URL location where more information can be found.",
            "nullable": false
          },
          "image-url": {
            "type": "string",
            "description": "Cover image of the assessment.",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "The language of the assessment.",
            "nullable": true
          },
          "num-questions": {
            "type": "integer",
            "description": "The number of words in the assessment.",
            "format": "int32",
            "nullable": false
          },
          "organization-id": {
            "type": "integer",
            "description": "The ID of the organization.",
            "format": "int64",
            "nullable": true
          },
          "provider-id": {
            "type": "string",
            "description": "The ID of the provider.",
            "nullable": true
          },
          "provider-code": {
            "type": "string",
            "description": "Unique provider code.",
            "nullable": true
          },
          "publish-date": {
            "type": "string",
            "description": "Date that the assessment was published.",
            "format": "date-time",
            "nullable": true
          },
          "visibilityGroups": {
            "type": "array",
            "description": "The realationship `id` of the relationship object must be the id of the visibility group and the type of the relationship must be groups.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GroupRelationship"
            }
          }
        }
      },
      "apiv2contentassessments_data": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "content/assessments"
          },
          "attributes": {
            "$ref": "#/components/schemas/apiv2contentassessments_data_attributes"
          }
        }
      },
      "content_assessments_body": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/apiv2contentassessments_data"
          }
        }
      },
      "apiv2contentassessmentsid_data_attributes": {
        "type": "object",
        "properties": {
          "external-id": {
            "type": "string",
            "description": "The external ID of the assessment.",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "The title of the assessment.",
            "nullable": false
          },
          "summary": {
            "type": "string",
            "description": "Short summary of the assessment.",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "URL location where more information can be found.",
            "nullable": false
          },
          "image-url": {
            "type": "string",
            "description": "Cover image of the assessment.",
            "nullable": true
          },
          "language": {
            "type": "string",
            "description": "The language of the assessment.",
            "nullable": true
          },
          "num-questions": {
            "type": "integer",
            "description": "The number of words in the assessment.",
            "format": "int32",
            "nullable": false
          },
          "organization-id": {
            "type": "integer",
            "description": "The ID of the organization.",
            "format": "int64",
            "nullable": true
          },
          "provider-id": {
            "type": "string",
            "description": "The ID of the provider.",
            "nullable": true
          },
          "provider-code": {
            "type": "string",
            "description": "Unique provider code.",
            "nullable": true
          },
          "publish-date": {
            "type": "string",
            "description": "Date that the assessment was published.",
            "format": "date-time",
            "nullable": true
          },
          "visibilityGroups": {
            "type": "array",
            "description": "The realationship `id` of the relationship object must be the id of the visibility group and the type of the relationship must be groups.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GroupRelationship"
            }
          }
        }
      },
      "apiv2contentassessmentsid_data": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/apiv2contentassessmentsid_data_attributes"
          }
        }
      },
      "assessments_id_body": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/apiv2contentassessmentsid_data"
          }
        }
      },
      "apiv2contentcontentIdrelationshipsskills_data": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "String containing the name of the skill. The name is also the unique identifier."
          },
          "type": {
            "type": "string",
            "description": "Type of object that will be added as a relationship. Can only be skills."
          }
        }
      },
      "relationships_skills_body": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiv2contentcontentIdrelationshipsskills_data"
            }
          }
        }
      },
      "relationships_skills_body_1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiv2contentcontentIdrelationshipsskills_data"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
